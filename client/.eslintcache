[{"/Users/danielcherino/interviews/alveo-logging-app/client/src/index.tsx":"1","/Users/danielcherino/interviews/alveo-logging-app/client/src/reportWebVitals.ts":"2","/Users/danielcherino/interviews/alveo-logging-app/client/src/app/store.ts":"3","/Users/danielcherino/interviews/alveo-logging-app/client/src/App.tsx":"4","/Users/danielcherino/interviews/alveo-logging-app/client/src/app/rootReducer.ts":"5","/Users/danielcherino/interviews/alveo-logging-app/client/src/app/slices.ts":"6","/Users/danielcherino/interviews/alveo-logging-app/client/src/components/TableDisplay.tsx":"7","/Users/danielcherino/interviews/alveo-logging-app/client/src/components/Chart.tsx":"8","/Users/danielcherino/interviews/alveo-logging-app/client/src/components/Table.tsx":"9","/Users/danielcherino/interviews/alveo-logging-app/client/src/components/TotalLogs.tsx":"10","/Users/danielcherino/interviews/alveo-logging-app/client/src/components/NumberOcurrences.tsx":"11","/Users/danielcherino/interviews/alveo-logging-app/client/src/components/Header.tsx":"12","/Users/danielcherino/interviews/alveo-logging-app/client/src/components/Hero.tsx":"13"},{"size":620,"mtime":1608721392337,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1608717056337,"results":"16","hashOfConfig":"15"},{"size":224,"mtime":1608722970299,"results":"17","hashOfConfig":"15"},{"size":2636,"mtime":1608815618297,"results":"18","hashOfConfig":"15"},{"size":237,"mtime":1608742065688,"results":"19","hashOfConfig":"15"},{"size":1613,"mtime":1608784568836,"results":"20","hashOfConfig":"15"},{"size":5439,"mtime":1608780475281,"results":"21","hashOfConfig":"15"},{"size":1399,"mtime":1608806803612,"results":"22","hashOfConfig":"15"},{"size":1371,"mtime":1608784923816,"results":"23","hashOfConfig":"15"},{"size":1263,"mtime":1608812380394,"results":"24","hashOfConfig":"15"},{"size":2164,"mtime":1608806766154,"results":"25","hashOfConfig":"15"},{"size":945,"mtime":1608786745503,"results":"26","hashOfConfig":"15"},{"size":2367,"mtime":1608789888750,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1io2yd9",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/danielcherino/interviews/alveo-logging-app/client/src/index.tsx",[],["56","57"],"/Users/danielcherino/interviews/alveo-logging-app/client/src/reportWebVitals.ts",[],"/Users/danielcherino/interviews/alveo-logging-app/client/src/app/store.ts",[],"/Users/danielcherino/interviews/alveo-logging-app/client/src/App.tsx",[],"/Users/danielcherino/interviews/alveo-logging-app/client/src/app/rootReducer.ts",[],"/Users/danielcherino/interviews/alveo-logging-app/client/src/app/slices.ts",[],"/Users/danielcherino/interviews/alveo-logging-app/client/src/components/TableDisplay.tsx",[],"/Users/danielcherino/interviews/alveo-logging-app/client/src/components/Chart.tsx",[],"/Users/danielcherino/interviews/alveo-logging-app/client/src/components/Table.tsx",["58"],"import { useState, useEffect } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { logsSelector, fetchLogs } from '../app/slices';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport TableDisplay from './TableDisplay';\n\nconst Table = () => {\n  const dispatch = useDispatch();\n  const { hasNewLines, loading, hasErrors } = useSelector(\n    logsSelector,\n    shallowEqual\n  );\n  const [hasRender, setHasRender] = useState(false);\n  const [open, setOpen] = useState(hasNewLines);\n\n  useEffect(() => {\n    dispatch(fetchLogs());\n\n    if (!hasErrors) {\n      setHasRender(true);\n    }\n\n    // Periodical fetching\n    const interval = setInterval(() => {\n      dispatch(fetchLogs());\n    }, 10000);\n\n    // Clear interval\n    return () => clearInterval(interval);\n  }, [dispatch, hasErrors]);\n\n  const handleClose = () => setOpen(false);\n\n  if (loading && !hasRender) return <p>Loading logs...</p>;\n  if (hasErrors) return <p>Cannot display logs..</p>;\n\n  return (\n    <>\n      <Snackbar\n        open={hasNewLines}\n        autoHideDuration={4000}\n        onClose={handleClose}\n      >\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"success\">\n          New logs updated!\n        </MuiAlert>\n      </Snackbar>\n\n      <TableDisplay />\n    </>\n  );\n};\n\nexport default Table;\n","/Users/danielcherino/interviews/alveo-logging-app/client/src/components/TotalLogs.tsx",[],"/Users/danielcherino/interviews/alveo-logging-app/client/src/components/NumberOcurrences.tsx",[],"/Users/danielcherino/interviews/alveo-logging-app/client/src/components/Header.tsx",[],"/Users/danielcherino/interviews/alveo-logging-app/client/src/components/Hero.tsx",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":15,"column":10,"nodeType":"65","messageId":"66","endLine":15,"endColumn":14},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"@typescript-eslint/no-unused-vars","'open' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]